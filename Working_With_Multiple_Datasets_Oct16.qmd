Recap of last lecture
  Character / String Data
  Tallies
  Queries
  
Outline
  Information in Multiple Datasets (Relational Databases)
  Keys
  Joins

Goal
We have multiple datasets want to bring them together

Libraries:
```{r}
library(readr)
library(tidyverse)
```

Women in science
```{r}
professions <- read_csv("
name,profession
Ada Lovelace,Mathematician
Marie Curie,Physicist and Chemist
Janaki Ammal,Botanist
Chien-Shiung Wu,Physicist
Katherine Johnson,Mathematician
Rosalind Franklin,Chemist
Vera Rubin,Astronomer
Gladys West,Mathematician
Flossie Wong-Staal,Virologist and Molecular Biologist
Jennifer Doudna,Biochemist
")
professions
```
```{r}
dates <- read_csv("
name,birth_year,death_year
Janaki Ammal,1897,1984
Chien-Shiung Wu,1912,1997
Katherine Johnson,1918,2020
Rosalind Franklin,1920,1958
Vera Rubin,1928,2016
Gladys West,1930,
Flossie Wong-Staal,1947,
Jennifer Doudna,1964,
")
dates
```
```{r}
works <- read_csv('
name,known_for
Ada Lovelace,first computer algorithm
Marie Curie,"theory of radioactivity,  discovery of elements polonium and radium, first woman to win a Nobel Prize"
Janaki Ammal,"hybrid species, biodiversity protection"
Chien-Shiung Wu,"confim and refine theory of radioactive beta decy, Wu experiment overturning theory of parity"
Katherine Johnson,calculations of orbital mechanics critical to sending the first Americans into space
Vera Rubin,existence of dark matter
Gladys West,mathematical modeling of the shape of the Earth which served as the foundation of GPS technology
Flossie Wong-Staal,first scientist to clone HIV and create a map of its genes which led to a test for the virus
Jennifer Doudna,"one of the primary developers of CRISPR, a ground-breaking technology for editing genomes"
')
works
```


Joining Datasets
something_join(x, y)

left_join(): all rows from x
right_join(): all rows from y
full_join(): all rows from both x and y
semi_join(): all rows from x where there are matching values in y, keeping just columns from x
inner_join(): all rows from x where there are matching values in y, return all combination of multiple matches in the case of multiple matches
anti_join(): return all rows from x where there are not matching values in y, never duplicate rows of x


#Example Code
```{r}
x <- read_table("
id value_x
1 x1
2 x2
3 x3
")

x
```
```{r}    
y <- read_table("
id value_y
1 y1
2 y2
4 y4
")

y
```
id is a key that can be used to connect / link the info in the datasets

#left_join
```{r}
left_join(x, y)
```

```{r}
professions |>
  left_join(dates)
```

#right_join
```{r}
right_join(x, y)
```

```{r}
professions |>
  right_join(dates)
```

full_join(x, y)
```{r}
full_join(x, y)
```

```{r}
dates |>
  full_join(works)
```

inner_join(x, y)
```{r}
inner_join(x, y)
```

```{r}
dates |>
  inner_join(works)
```


Filtering Joins
  Filter rows based on matching or not,
  But donâ€™t bring the columns
  
semi_join(x, y)
```{r}
semi_join(x, y)
```
```{r}
dates |>
  semi_join(works)
```

anti_join(x, y)
```{r}
anti_join(x, y)
```

```{r}
dates |>
  anti_join(works)
```


##Tidy Women Scientists
Want all 10 scientists, OK with missing data
```{r}
professions |>
  left_join(dates) |>
  left_join(works)
```

Lecture Review
  Information in Multiple Datasets (Relational Databases)
  Keys
  Joins